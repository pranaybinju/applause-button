@mixin animate-once($name) {
  animation-name: $name;
  animation-duration: 0.5s;
  animation-iteration-count: 1;
}

@mixin centered-square($size) {
  position: absolute;
  width: $size;
  height: $size;
  margin-left: (100% - $size) / 2;
  margin-top: (100% - $size) / 2;
}

@mixin position-fill() {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

applause-button {
  position: relative;
  cursor: pointer;
  background-image: url("https://assets-global.website-files.com/5e469aaf314e562ff1146d3f/601153608785fef5a88d32ca_heart-empty.svg");
  background-repeat: no-repeat;
  background-position: left;

  .style-root {
    @include position-fill();

    &:after {
      @include position-fill();
      content: " ";
      display: block;
      border-radius: 50%;
      border: 1px solid;
    }
    &:hover:after:not(.clap-limit-exceeded) {
      border-color: inherit;
    }
  }

  &.loading {
    opacity: 0.5;
  }

  .shockwave {
    @include position-fill();
    border-radius: 50%;
  }

  svg {
    @include centered-square(60%);
    @include position-fill();
    opacity: 0.8;
    stroke: none;
    // annoyingly bootstrap has a higher precedence rule that sets overflow to hidden
    // hence the bang-important
    overflow: visible !important;

    g.flat {
      visibility: hidden;
    }
    g.outline {
      visibility: visible;
    }
  }

  &.clap-limit-exceeded {
    cursor: inherit;
    div {
      fill: rgb(0, 128, 0) !important;
      stroke: rgb(0, 128, 0) !important;
    }
  }

  &.clapped {
    svg {
      g.flat {
        visibility: visible;
      }
      g.outline {
        visibility: hidden;
      }
    }
  }

  .style-root:after {
    border: none !important;
  }
  .shockwave,
  svg {
    display: none;
  }

  // .count-hidden {
  //   opacity: 0 !important;
  //   transition: all 1s ease;
  // }
  .count-container {
    display: none;
    .count {
      display: none;
    }
  }

  .total-count-container {
    position: absolute;
    left: 10px;
    top: 19px;

    width: 100%;
    color: gray;
    user-select: none;
    opacity: 1;
    font-family: Helvetica;
    .total-count {
      font-size: 0.9rem;
      text-align: center;
    }
  }

  g.sparkle {
    circle {
      opacity: 0;
      stroke-width: 0;
    }

    $elements: 5;
    $degrees: 360deg / $elements;
    @for $i from 0 to $elements {
      g:nth-child(#{$i + 1}) {
        transform: rotate($degrees * $i) translateX(10px);
      }
    }
  }

  &:hover:not(.clapped) {
    .shockwave {
      animation-name: shockwave;
      animation-duration: 1s;
      animation-iteration-count: infinite;
      animation-timing-function: ease-in;
    }
  }

  // CSS that is toggled to fire one-time animations
  &.clap {
    .sparkle circle {
      @include animate-once(explode);
    }

    @include animate-once(pulse);
  }

  &.clap {
    background-image: url("https://assets-global.website-files.com/5e469aaf314e562ff1146d3f/601153601bab950a9703c70f_heart-fill.svg");
  }
}

@keyframes explode {
  0% {
    transform: translateX(10px);
    opacity: 0;
  }
  20% {
    opacity: 1;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: translateX(25px);
  }
}

@keyframes shockwave {
  0% {
    transform: scale(1);
    box-shadow: 0 0 2px;
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 0;
    box-shadow: 0 0 50px, inset 0 0 10px;
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes hideThenShow {
  0% {
    opacity: 1;
    transform: translateY(0);
  }
  20% {
    opacity: 0;
    transform: translateY(-10px);
  }
  50% {
    transform: translateY(10px);
  }
  80% {
    transform: translateY(10px);
    opacity: 0;
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
